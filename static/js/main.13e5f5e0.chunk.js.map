{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","class","src","alt","className","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAiCeA,MA7Bf,YAA0D,EAA1CC,GAA2C,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,OAC9C,OACA,sBAAKC,MAAM,QAAX,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,MAAM,cAAX,UACI,oBAAIA,MAAM,eAAV,SAA0BJ,IAC1B,oBAAII,MAAM,cAAV,SAAyBL,IACzB,oBAAIQ,UAAU,gBAAd,SACKJ,EAAOK,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBH,UAAU,gBAA1B,SACKE,GADIC,QAKjB,oBAAGH,UAAU,iBAAb,UAA+BN,EAAQU,MAAM,EAAE,KAA/C,gBCqDGC,G,kNAxCbC,MAAQ,CACNC,WAAW,EACXC,OAAS,I,EAEXC,U,sBAAY,8BAAAC,EAAA,sEACiCC,IAAMC,IAAI,yEAD3C,gBACcJ,EADd,EACFK,KAAQA,KAAQL,OACxB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAFzB,2C,uDAIZ,WAIEQ,KAAKN,c,oBAEP,WACE,MAA8BM,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OAAO,yBAASX,MAAM,YAAf,SACJU,EACD,qBAAKV,MAAM,SAAX,SACE,sBAAMA,MAAM,gBAAZ,0BAGF,qBAAKA,MAAM,SAAX,SACGW,EAAOP,KAAI,SAAAe,GAAK,OACf,cAAC,EAAD,CAEEzB,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,QANToB,EAAMzB,e,GA1BL2B,IAAMC,YCxBxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.13e5f5e0.chunk.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport \"./movie.css\";\n\nfunction Movie({id, year, title, summary, poster, genres}){\n    return (\n    <div class=\"movie\">\n        <img src={poster} alt={title} title={title}/>\n        <div class=\"movie__data\">\n            <h3 class=\"movie__title\">{title}</h3>\n            <h5 class=\"movie__year\">{year}</h5>\n            <ul className=\"movie__genres\">\n                {genres.map((genre, index) => (\n                    <li key={index} className=\"genres__genre\">\n                        {genre}\n                    </li>\n                ))}\n            </ul>\n            <p className=\"movie__summary\">{summary.slice(0,180)}...</p>\n        </div>\n    </div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./app.css\";\n/*\nclass App extends React.Component{\n  //state 정의\n  state = {\n    count: 0\n  };\n  //함수들 정의\n  add = () => { //current = this.state\n    this.setState(current => ({count: current.count + 1})); // setState()를 사용해야 render()가 refresh 된다.\n  };\n  remove = () => {\n    this.setState(current => ({count: current.count - 1}));\n  };\n  //render()정의\n  render(){\n    return <div>\n      <h1>the number count is: {this.state.count}</h1>\n      <button onClick={this.add}>Add</button>\n      <button onClick={this.remove}>Remove</button>\n    </div>\n  }\n}\n\nexport default App;\n*/\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies : []\n  };\n  getMovies = async () => { //async 비동기 함수\n    const { data: { data: { movies }}} = await axios.get(\"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n  }; // movies = movies:movies, await 뭘 기다리는지, movies.data.data.movies 보다 좋은 방법\n  componentDidMount(){ // 첫 렌더 완료시 실행되는 함수\n    // setTimeout(() => { //6초 뒤에 스테이트 변경\n    //   this.setState({isLoading: false});\n    // }, 6000);\n    this.getMovies();\n  };\n  render(){\n    const { isLoading, movies } = this.state; // 일일히 this.state를 적지 않게 해준다.\n    return <section class=\"container\">\n      {isLoading ? (\n      <div class=\"loader\">\n        <span class=\"loader__text_\">Loading...</span>\n      </div>\n    ) : (\n      <div class=\"movies\">\n        {movies.map(movie => (\n          <Movie\n            key={movie.id}\n            id={movie.id}\n            year={movie.year}\n            title={movie.title}\n            summary={movie.summary}\n            poster={movie.medium_cover_image}\n            genres={movie.genres}\n          /> // map은 언제나 return해야 한다.\n        ))}\n      </div>\n    )}\n    </section>;\n  };\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n// you can render only one component at the time\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}